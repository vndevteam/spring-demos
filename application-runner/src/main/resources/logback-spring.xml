<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- Stop output INFO at start -->
    <statusListener class="ch.qos.logback.core.status.NopStatusListener" />
    <conversionRule conversionWord="mask" converterClass="io.github.vndevteam.applicationrunner.converter.LogMaskConverter" />
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] %yellow(%C{2}:%L): %X{jobId} %mask(%msg) %n%throwable</pattern> <!-- Use mask: %mask(%msg) -->
        </encoder>
    </appender>
    <appender name="LOGSTASH" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <message>
                    <fieldName>message</fieldName>
                </message>
                <logLevel>
                    <fieldName>level</fieldName>
                </logLevel>
                <logLevelValue>
                    <fieldName>level_value</fieldName>
                </logLevelValue>
                <timestamp>
                    <fieldName>timestamp</fieldName>
                </timestamp>
                <mdc>
                    <mdcKeyFieldName>jobId=job_id</mdcKeyFieldName>
                </mdc>
                <arguments>
                    <includeNonStructuredArguments>true</includeNonStructuredArguments>
                </arguments>
                <threadName>
                    <fieldName>thread</fieldName>
                </threadName>
                <contextName>
                    <fieldName>service_name</fieldName>
                </contextName>
                <pattern>
                    <pattern>
                        {
                            <!-- If you need to use mask: "message": "%mask(%message)" -->
                            "service_hostname": "${hostname}",
                            "pid": "${PID:-}"
                        }
                    </pattern>
                </pattern>
                <loggerName>
                    <fieldName>logger_name</fieldName>
                </loggerName>
                <callerData>
                    <classFieldName>class</classFieldName>
                    <methodFieldName>method</methodFieldName>
                    <fileFieldName>file</fileFieldName>
                    <lineFieldName>line</lineFieldName>
                </callerData>
                <throwableClassName>
                    <fieldName>exception_class</fieldName>
                </throwableClassName>
                <stackTrace>
                    <fieldName>stack_trace</fieldName>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <maxDepthPerThrowable>200</maxDepthPerThrowable>
                        <maxLength>5000</maxLength>
                        <rootCauseFirst>true</rootCauseFirst>
                    </throwableConverter>
                </stackTrace>
            </providers>
        </encoder>
    </appender>

    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="CONSOLE" />
        </root>
    </springProfile>

    <springProfile name="stg, prod">
        <root level="INFO">
            <appender-ref ref="LOGSTASH" />
        </root>
    </springProfile>
</configuration>
